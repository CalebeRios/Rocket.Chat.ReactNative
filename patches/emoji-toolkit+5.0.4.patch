diff --git a/node_modules/emoji-toolkit/lib/js/joypixels.js b/node_modules/emoji-toolkit/lib/js/joypixels.js
index 8e696e6..19ca9bd 100644
--- a/node_modules/emoji-toolkit/lib/js/joypixels.js
+++ b/node_modules/emoji-toolkit/lib/js/joypixels.js
@@ -111,6 +111,7 @@
         ':L':'1f615',
         '=L':'1f615',
         ':P':'1f61b',
+        ':p':'1f61b',
         '=P':'1f61b',
         ':b':'1f61b',
         ':O':'1f62e',
@@ -274,6 +275,51 @@
         return str;
     };
 
+    ns.toUnicode = function(str) {
+        if(typeof ns.asciiList[str] !== 'undefined') {
+            str = ns.asciiList[str];
+            return ns.convert(str.toUpperCase());
+        }
+        // replace regular shortnames first
+        var unicode,fname;
+        str = str.replace(ns.regShortNames, function(shortname) {
+            if( (typeof shortname === 'undefined') || (shortname === '') || (ns.shortnames.indexOf(shortname) === -1) ) {
+                // if the shortname doesnt exist just return the entire matchhju
+                return shortname;
+            }
+            // map shortname to parent
+            if (!ns.emojiList[shortname]) {
+                for ( var emoji in ns.emojiList ) {
+                    if (!ns.emojiList.hasOwnProperty(emoji) || (emoji === '')) continue;
+                    if (ns.emojiList[emoji].shortnames.indexOf(shortname) === -1) continue;
+                    shortname = emoji;
+                    break;
+                }
+            }
+            unicode = ns.emojiList[shortname].uc_full;
+            return ns.convert(unicode);
+        });
+
+        // if ascii smileys are turned on, then we'll replace them!
+        if (ns.ascii) {
+
+            var asciiRX = ns.riskyMatchAscii ? ns.regAsciiRisky : ns.regAscii;
+
+            str = str.replace(asciiRX, function(entire, m1, m2, m3) {
+                if( (typeof m3 === 'undefined') || (m3 === '') || (!(ns.unescapeHTML(m3) in ns.asciiList)) ) {
+                    // if the ascii doesnt exist just return the entire match
+                    return entire;
+                }
+
+                m3 = ns.unescapeHTML(m3);
+                unicode = ns.asciiList[m3].toUpperCase();
+                return m2+ns.convert(unicode);
+            });
+        }
+
+        return str;
+    };
+
     ns.shortnameToImage = function(str) {
         // replace regular shortnames first
         var replaceWith,shortname,unicode,fname,alt,category,title,size,ePath;
